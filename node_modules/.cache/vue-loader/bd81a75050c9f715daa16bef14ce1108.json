{"remainingRequest":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\src\\views\\Blog\\components\\BlogCategory.vue?vue&type=style&index=0&id=7df4ddf4&scoped=true&lang=less&","dependencies":[{"path":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\src\\views\\Blog\\components\\BlogCategory.vue","mtime":1618045850136},{"path":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Webstromfiles\\录播课程\\VUE2\\入门\\搭建工程\\my-cite\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5ibG9nLWNhdGVnb3J5LWNvbnRhaW5lcnsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgd2lkdGg6IDM1MHB4Ow0KICBoZWlnaHQ6IDEwMCU7DQogIHBhZGRpbmc6IDQwcHggMjBweCA0MHB4IDQwcHg7DQogIG92ZXJmbG93LXk6IGF1dG87DQogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICNkNWQ0ZDAgMCUsICNkNWQ0ZDAgMSUsICNlZWVlZWMgMzElLCAjZWZlZWVjIDc1JSwgI2U5ZTllNyAxMDAlKTsNCiAgaDJ7DQogICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgbWFyZ2luOiAwOw0KICAgIGZvbnQtc2l6ZTogMzJweDsNCiAgICBsZXR0ZXItc3BhY2luZzogMnB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["BlogCategory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlogCategory.vue","sourceRoot":"src/views/Blog/components","sourcesContent":["<template>\r\n<div class=\"blog-category-container\">\r\n  <h2>文章分类</h2>\r\n  <Catalogue :list=\"list\" @select=\"handleSelected\"/>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Catalogue from \"@/views/Blog/components/Catalogue\";\r\nimport fetchData from \"@/mixins/fetchData\";\r\nimport { getBlogTypes } from \"@/api/blog\";\r\n\r\nexport default {\r\n  name: \"BlogCategory\",\r\n  mixins: [fetchData([])],\r\n  components: {\r\n    Catalogue\r\n  },\r\n  computed: {\r\n    categoryId(){\r\n      return +this.$route.params.categoryId || -1;\r\n    },\r\n    list(){\r\n      const totalArticleCount = this.data.reduce((a, b) => a + b.articleCount, 0);\r\n      const result = [{name: \"全部\", id: -1,\r\n        articleCount: totalArticleCount}, ...this.data]\r\n      return result.map(item => ({\r\n        ...item,\r\n        isSelected: item.id === this.categoryId,\r\n        aside: `${item.articleCount}篇`\r\n      }));\r\n    },\r\n    limit(){\r\n      return this.$route.query.limit || 20;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchData(){\r\n      return await getBlogTypes();\r\n    },\r\n    handleSelected(item){\r\n      const query = {\r\n        page: 1,\r\n        limit: this.limit\r\n      }\r\n      //跳转到当前的分类id，当前的页容量 newPage的页码\r\n      if (item.id === -1){\r\n        //当前没有分类\r\n        //   /article/cate/-1?page=${newPage}&limit=${this.routeInfo.limit}\r\n        this.$router.push({\r\n          name: \"Blog\",\r\n          query\r\n        })\r\n      }else{\r\n        //   /article/cate/${this.routeInfo.categoryId}/page=${newPage}&limit=${this.routeInfo.limit}\r\n        this.$router.push({\r\n          name: \"CategoryBlog\",\r\n          query,\r\n          params: {\r\n            categoryId: item.id\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.blog-category-container{\r\n  box-sizing: border-box;\r\n  width: 350px;\r\n  height: 100%;\r\n  padding: 40px 20px 40px 40px;\r\n  overflow-y: auto;\r\n  background-image: linear-gradient(to top, #d5d4d0 0%, #d5d4d0 1%, #eeeeec 31%, #efeeec 75%, #e9e9e7 100%);\r\n  h2{\r\n    font-weight: bold;\r\n    margin: 0;\r\n    font-size: 32px;\r\n    letter-spacing: 2px;\r\n  }\r\n}\r\n</style>"]}]}